# Define a global platform for your project
platform :ios, '13.0'

# CocoaPods analytics sends network stats synchronously affecting Flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  # Use modular headers for gRPC compatibility
  use_modular_headers!

  pod 'FirebaseFirestore'
  pod 'FirebaseStorage'
  
  # Explicitly add gRPC dependencies with modular headers
  pod 'gRPC-Core', :modular_headers => true
  pod 'gRPC-C++', :modular_headers => true
  pod 'BoringSSL-GRPC', :modular_headers => true

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    # Remove problematic compiler flag for BoringSSL-GRPC
    if target.name == 'BoringSSL-GRPC'
      target.source_build_phase.files.each do |file|
        if file.settings && file.settings['COMPILER_FLAGS']
          flags = file.settings['COMPILER_FLAGS'].split
          flags.reject! { |flag| flag == '-GCC_WARN_INHIBIT_ALL_WARNINGS' }
          file.settings['COMPILER_FLAGS'] = flags.join(' ')
        end
      end
    end

    flutter_additional_ios_build_settings(target)

    # Set iOS Deployment Target to 13.0 for improved Xcode compatibility
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
      config.build_settings['ONLY_ACTIVE_ARCH'] = 'YES' if config.name == 'Debug'
      config.build_settings['ARCHS'] = 'arm64'
      config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'

      # Allow non-modular includes
      config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
    end
  end
end

# #!/bin/sh
# set -e  # Exit on first failed command
# set -x  # Print all executed commands to the log

# # Install ffi gem for compatibility with ARM architecture
# sudo gem install ffi

# # Install the compatible version of the public_suffix gem
# sudo gem install public_suffix -v 5.1.1

# # Install a specific version of CocoaPods that is compatible with Ruby 2.6.10
# sudo gem install cocoapods -v 1.10.0

# # Update CocoaPods repository in x86_64 mode
# arch -x86_64 pod repo update

# # Remove Podfile.lock to avoid version conflicts
# cd ios
# rm -f Podfile.lock

# # Get Flutter dependencies
# flutter pub get

# # Install and update CocoaPods dependencies in x86_64 mode
# arch -x86_64 pod install --repo-update

# # Navigate back to the root directory
# cd ..
